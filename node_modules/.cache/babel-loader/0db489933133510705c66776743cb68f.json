{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\abdel\\\\Documents\\\\Safe\\\\Code\\\\Bootcamp\\\\frontest\\\\src\\\\components\\\\mainPage\\\\LandingItems\\\\navbar\\\\MenuToggle.js\";\n// Importing react\nimport React from 'react'; // Importing framer motion\n\nimport { motion } from 'framer-motion'; // Importing styles\n\nimport styled from 'styled-components'; // Making the hamburger button\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Button = styled.div`\n    z-index: 99;\n    cursor: pointer;\n`; // Making the path of the props for animation. We set this to be a function, which has\n// motion.path with specific animated path\n\n_c = Button;\n\nconst Path = props => /*#__PURE__*/_jsxDEV(motion.path, {\n  fill: \"transparent\",\n  strokeLinecap: \"round\" // Shape at endpoints of subpath\n  ,\n  strokeWidth: \"3\" // Distance between edges of a stroke\n  ,\n  stroke: \"hsl(0, 0%, 18%)\" // Defines the color (gradients and such)\n  ,\n  ...props\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 17,\n  columnNumber: 5\n}, this); // Defining the transition\n\n\n_c2 = Path;\nconst transition = {\n  duration: 0.3\n}; // Making the MenuToggle function. It takes two parameters, toggle and isOpen \n\nexport function MenuToggle({\n  toggle,\n  isOpen\n}) {\n  // Return the following\n  return (\n    /*#__PURE__*/\n    // Button to be toggled on click\n    _jsxDEV(Button, {\n      onClick: toggle,\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        width: \"23\",\n        height: \"23\",\n        viewBox: \"0 0 23 23\",\n        children: [/*#__PURE__*/_jsxDEV(Path, {\n          animate: isOpen ? \"open\" : \"closed\",\n          initial: false,\n          variants: {\n            closed: {\n              d: \"M 2 2.5 L 20 2.5\",\n              stroke: \"hsl(0, 0%, 18%)\"\n            },\n            open: {\n              d: \"M 3 16.5 L 17 2.5\",\n              stroke: \"hsl(0, 0%, 18%)\"\n            }\n          },\n          transition: transition\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Path, {\n          d: \"M 2 9.423 L 20 9.423\",\n          stroke: \"hsl(0, 0%, 18%)\",\n          animate: isOpen ? \"open\" : \"closed\",\n          initial: false,\n          variants: {\n            closed: {\n              opacity: 1\n            },\n            open: {\n              opacity: 0\n            }\n          },\n          transition: transition\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Path, {\n          animate: isOpen ? \"open\" : \"closed\",\n          initial: false,\n          variants: {\n            closed: {\n              d: \"M 2 16.346 L 20 16.346\",\n              stroke: \"hsl(0, 0%, 18%)\"\n            },\n            open: {\n              d: \"M 3 2.5 L 17 16.346\",\n              stroke: \"hsl(0, 0%, 18%)\"\n            }\n          },\n          transition: transition\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)\n  );\n}\n_c3 = MenuToggle;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"Path\");\n$RefreshReg$(_c3, \"MenuToggle\");","map":{"version":3,"sources":["D:/Users/abdel/Documents/Safe/Code/Bootcamp/frontest/src/components/mainPage/LandingItems/navbar/MenuToggle.js"],"names":["React","motion","styled","Button","div","Path","props","transition","duration","MenuToggle","toggle","isOpen","closed","d","stroke","open","opacity"],"mappings":";AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAASC,MAAT,QAAuB,eAAvB,C,CACA;;AACA,OAAOC,MAAP,MAAmB,mBAAnB,C,CAEA;;;AACA,MAAMC,MAAM,GAAGD,MAAM,CAACE,GAAI;AAC1B;AACA;AACA,CAHA,C,CAKA;AACA;;KANMD,M;;AAON,MAAME,IAAI,GAAIC,KAAD,iBACT,QAAC,MAAD,CAAQ,IAAR;AACI,EAAA,IAAI,EAAC,aADT;AAEI,EAAA,aAAa,EAAC,OAFlB,CAE0B;AAF1B;AAGI,EAAA,WAAW,EAAC,GAHhB,CAGoB;AAHpB;AAII,EAAA,MAAM,EAAC,iBAJX,CAI6B;AAJ7B;AAAA,KAKQA;AALR;AAAA;AAAA;AAAA;AAAA,QADJ,C,CAUA;;;MAVMD,I;AAWN,MAAME,UAAU,GAAG;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAnB,C,CAEA;;AACA,OAAO,SAASC,UAAT,CAAoB;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAApB,EAAwC;AAC3C;AACA;AAAA;AACI;AACA,YAAC,MAAD;AAAQ,MAAA,OAAO,EAAED,MAAjB;AAAA,6BAEI;AAAK,QAAA,KAAK,EAAC,IAAX;AAAgB,QAAA,MAAM,EAAC,IAAvB;AAA4B,QAAA,OAAO,EAAC,WAApC;AAAA,gCACI,QAAC,IAAD;AACI,UAAA,OAAO,EAAEC,MAAM,GAAG,MAAH,GAAY,QAD/B;AAEI,UAAA,OAAO,EAAE,KAFb;AAGI,UAAA,QAAQ,EAAE;AACNC,YAAAA,MAAM,EAAE;AAAEC,cAAAA,CAAC,EAAE,kBAAL;AAAyBC,cAAAA,MAAM,EAAE;AAAjC,aADF;AAENC,YAAAA,IAAI,EAAE;AAAEF,cAAAA,CAAC,EAAE,mBAAL;AAA0BC,cAAAA,MAAM,EAAE;AAAlC;AAFA,WAHd;AAOI,UAAA,UAAU,EAAEP;AAPhB;AAAA;AAAA;AAAA;AAAA,gBADJ,eAUI,QAAC,IAAD;AACI,UAAA,CAAC,EAAC,sBADN;AAEI,UAAA,MAAM,EAAC,iBAFX;AAGI,UAAA,OAAO,EAAEI,MAAM,GAAG,MAAH,GAAY,QAH/B;AAII,UAAA,OAAO,EAAE,KAJb;AAKI,UAAA,QAAQ,EAAE;AACNC,YAAAA,MAAM,EAAE;AAAEI,cAAAA,OAAO,EAAE;AAAX,aADF;AAEND,YAAAA,IAAI,EAAE;AAAEC,cAAAA,OAAO,EAAE;AAAX;AAFA,WALd;AASI,UAAA,UAAU,EAAET;AAThB;AAAA;AAAA;AAAA;AAAA,gBAVJ,eAqBI,QAAC,IAAD;AACI,UAAA,OAAO,EAAEI,MAAM,GAAG,MAAH,GAAY,QAD/B;AAEI,UAAA,OAAO,EAAE,KAFb;AAGI,UAAA,QAAQ,EAAE;AACNC,YAAAA,MAAM,EAAE;AAAEC,cAAAA,CAAC,EAAE,wBAAL;AAA+BC,cAAAA,MAAM,EAAE;AAAvC,aADF;AAENC,YAAAA,IAAI,EAAE;AAAEF,cAAAA,CAAC,EAAE,qBAAL;AAA4BC,cAAAA,MAAM,EAAE;AAApC;AAFA,WAHd;AAOI,UAAA,UAAU,EAAEP;AAPhB;AAAA;AAAA;AAAA;AAAA,gBArBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA;AAFJ;AAqCH;MAvCeE,U","sourcesContent":["// Importing react\nimport React from 'react';\n// Importing framer motion\nimport { motion } from 'framer-motion';\n// Importing styles\nimport styled from 'styled-components';\n\n// Making the hamburger button\nconst Button = styled.div`\n    z-index: 99;\n    cursor: pointer;\n`;\n\n// Making the path of the props for animation. We set this to be a function, which has\n// motion.path with specific animated path\nconst Path = (props) => (\n    <motion.path \n        fill=\"transparent\"\n        strokeLinecap=\"round\" // Shape at endpoints of subpath\n        strokeWidth=\"3\" // Distance between edges of a stroke\n        stroke=\"hsl(0, 0%, 18%)\" // Defines the color (gradients and such)\n        {...props} // Spread attribute, pass all prop parameters to this effect\n    />\n);\n\n// Defining the transition\nconst transition = { duration: 0.3 };\n\n// Making the MenuToggle function. It takes two parameters, toggle and isOpen \nexport function MenuToggle({ toggle, isOpen }) {\n    // Return the following\n    return(\n        // Button to be toggled on click\n        <Button onClick={toggle}>\n            {/* Making the svg and setting its parameters. The viewBox is what we see the svg through/window */}\n            <svg width=\"23\" height=\"23\" viewBox=\"0 0 23 23\">\n                <Path\n                    animate={isOpen ? \"open\" : \"closed\"}\n                    initial={false}\n                    variants={{\n                        closed: { d: \"M 2 2.5 L 20 2.5\", stroke: \"hsl(0, 0%, 18%)\" },\n                        open: { d: \"M 3 16.5 L 17 2.5\", stroke: \"hsl(0, 0%, 18%)\" },\n                    }}\n                    transition={transition}\n                />\n                <Path\n                    d=\"M 2 9.423 L 20 9.423\"\n                    stroke=\"hsl(0, 0%, 18%)\"\n                    animate={isOpen ? \"open\" : \"closed\"}\n                    initial={false}\n                    variants={{\n                        closed: { opacity: 1 },\n                        open: { opacity: 0 },\n                    }}\n                    transition={transition}\n                />\n                <Path\n                    animate={isOpen ? \"open\" : \"closed\"}\n                    initial={false}\n                    variants={{\n                        closed: { d: \"M 2 16.346 L 20 16.346\", stroke: \"hsl(0, 0%, 18%)\" },\n                        open: { d: \"M 3 2.5 L 17 16.346\", stroke: \"hsl(0, 0%, 18%)\" },\n                    }}\n                    transition={transition}\n                />\n            </svg>\n        </Button>\n    );\n}\n\n"]},"metadata":{},"sourceType":"module"}