{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\abdel\\\\Documents\\\\Safe\\\\Code\\\\Bootcamp\\\\frontest\\\\src\\\\components\\\\misc\\\\Grids.js\";\nimport { ProGallery } from 'pro-gallery';\nimport 'pro-gallery/dist/statics/main.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Gallery() {\n  // Add your images here...\n  const items = [{\n    // Image item:\n    itemId: 'sample-id',\n    mediaUrl: 'https://i.picsum.photos/id/674/200/300.jpg?hmac=kS3VQkm7AuZdYJGUABZGmnNj_3KtZ6Twgb5Qb9ITssY',\n    metaData: {\n      type: 'image',\n      height: 200,\n      width: 100,\n      title: 'sample-title',\n      description: 'sample-description',\n      focalPoint: [0, 0],\n      link: {\n        url: 'http://example.com',\n        target: '_blank'\n      }\n    }\n  }, {\n    // Another Image item:\n    itemId: 'differentItem',\n    mediaUrl: 'https://i.picsum.photos/id/1003/1181/1772.jpg?hmac=oN9fHMXiqe9Zq2RM6XT-RVZkojgPnECWwyEF1RvvTZk',\n    metaData: {\n      type: 'image',\n      height: 200,\n      width: 100,\n      title: 'sample-title',\n      description: 'sample-description',\n      focalPoint: [0, 0],\n      link: {\n        url: 'http://example.com',\n        target: '_blank'\n      }\n    }\n  }, {\n    // HTML item:\n    itemId: 'htmlItem',\n    html: \"<div style='width: 300px; height: 200px; background:pink;'>I am a text block</div>\",\n    metadata: {\n      type: \"text\",\n      height: 200,\n      width: 300,\n      title: 'sample-title',\n      description: 'sample-description',\n      backgroundColor: 'pink'\n    }\n  }]; // The options of the gallery (from the playground current state)\n\n  const options = {\n    galleryLayout: 1,\n    galleryMargin: 10,\n    scrollAnimation: 'ZOOM_OUT',\n    overlayAnimation: 'SLIDE_RIGHT',\n    imageHoverAnimation: 'ZOOM_IN',\n    imagePlacementAnimation: 'SLIDE',\n    itemEnableShadow: true,\n    overlayBackground: 'black'\n  }; // The size of the gallery container. The images will fit themselves in it\n\n  const container = {\n    width: window.innerWidth,\n    height: window.innerHeight\n  }; // The eventsListener will notify you anytime something has happened in the gallery.\n\n  const eventsListener = (eventName, eventData) => console.log({\n    eventName,\n    eventData\n  }); // The scrollingElement is usually the window, if you are scrolling inside another element, suplly it here\n\n\n  const scrollingElement = window;\n  return /*#__PURE__*/_jsxDEV(ProGallery, {\n    items: items,\n    options: options,\n    container: container,\n    eventsListener: eventsListener,\n    scrollingElement: scrollingElement\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n_c = Gallery;\nexport default Gallery;\n\nvar _c;\n\n$RefreshReg$(_c, \"Gallery\");","map":{"version":3,"sources":["D:/Users/abdel/Documents/Safe/Code/Bootcamp/frontest/src/components/misc/Grids.js"],"names":["ProGallery","Gallery","items","itemId","mediaUrl","metaData","type","height","width","title","description","focalPoint","link","url","target","html","metadata","backgroundColor","options","galleryLayout","galleryMargin","scrollAnimation","overlayAnimation","imageHoverAnimation","imagePlacementAnimation","itemEnableShadow","overlayBackground","container","window","innerWidth","innerHeight","eventsListener","eventName","eventData","console","log","scrollingElement"],"mappings":";AAAA,SAASA,UAAT,QAA2B,aAA3B;AACA,OAAO,mCAAP;;AAEA,OAAO,SAASC,OAAT,GAAmB;AAExB;AACA,QAAMC,KAAK,GAAG,CACN;AAAE;AACMC,IAAAA,MAAM,EAAE,WADhB;AAEQC,IAAAA,QAAQ,EAAE,6FAFlB;AAGQC,IAAAA,QAAQ,EAAE;AACFC,MAAAA,IAAI,EAAE,OADJ;AAEFC,MAAAA,MAAM,EAAE,GAFN;AAGFC,MAAAA,KAAK,EAAE,GAHL;AAIFC,MAAAA,KAAK,EAAE,cAJL;AAKFC,MAAAA,WAAW,EAAE,oBALX;AAMFC,MAAAA,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,CANV;AAOFC,MAAAA,IAAI,EAAE;AACEC,QAAAA,GAAG,EAAE,oBADP;AAEEC,QAAAA,MAAM,EAAE;AAFV;AAPJ;AAHlB,GADM,EAiBN;AAAE;AACMX,IAAAA,MAAM,EAAE,eADhB;AAEQC,IAAAA,QAAQ,EAAE,gGAFlB;AAGQC,IAAAA,QAAQ,EAAE;AACFC,MAAAA,IAAI,EAAE,OADJ;AAEFC,MAAAA,MAAM,EAAE,GAFN;AAGFC,MAAAA,KAAK,EAAE,GAHL;AAIFC,MAAAA,KAAK,EAAE,cAJL;AAKFC,MAAAA,WAAW,EAAE,oBALX;AAMFC,MAAAA,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,CANV;AAOFC,MAAAA,IAAI,EAAE;AACEC,QAAAA,GAAG,EAAE,oBADP;AAEEC,QAAAA,MAAM,EAAE;AAFV;AAPJ;AAHlB,GAjBM,EAiCN;AAAE;AACMX,IAAAA,MAAM,EAAE,UADhB;AAEQY,IAAAA,IAAI,EAAE,oFAFd;AAGQC,IAAAA,QAAQ,EAAE;AACFV,MAAAA,IAAI,EAAE,MADJ;AAEFC,MAAAA,MAAM,EAAE,GAFN;AAGFC,MAAAA,KAAK,EAAE,GAHL;AAIFC,MAAAA,KAAK,EAAE,cAJL;AAKFC,MAAAA,WAAW,EAAE,oBALX;AAMFO,MAAAA,eAAe,EAAE;AANf;AAHlB,GAjCM,CAAd,CAHwB,CAoDxB;;AACA,QAAMC,OAAO,GAAG;AACdC,IAAAA,aAAa,EAAE,CADD;AAEdC,IAAAA,aAAa,EAAE,EAFD;AAGdC,IAAAA,eAAe,EAAE,UAHH;AAIdC,IAAAA,gBAAgB,EAAE,aAJJ;AAKdC,IAAAA,mBAAmB,EAAE,SALP;AAMdC,IAAAA,uBAAuB,EAAE,OANX;AAOdC,IAAAA,gBAAgB,EAAE,IAPJ;AAQdC,IAAAA,iBAAiB,EAAE;AARL,GAAhB,CArDwB,CAgExB;;AACA,QAAMC,SAAS,GAAG;AAChBnB,IAAAA,KAAK,EAAEoB,MAAM,CAACC,UADE;AAEhBtB,IAAAA,MAAM,EAAEqB,MAAM,CAACE;AAFC,GAAlB,CAjEwB,CAsExB;;AACA,QAAMC,cAAc,GAAG,CAACC,SAAD,EAAYC,SAAZ,KAA0BC,OAAO,CAACC,GAAR,CAAY;AAACH,IAAAA,SAAD;AAAYC,IAAAA;AAAZ,GAAZ,CAAjD,CAvEwB,CAyExB;;;AACA,QAAMG,gBAAgB,GAAGR,MAAzB;AAEA,sBACE,QAAC,UAAD;AACE,IAAA,KAAK,EAAE1B,KADT;AAEE,IAAA,OAAO,EAAEgB,OAFX;AAGE,IAAA,SAAS,EAAES,SAHb;AAIE,IAAA,cAAc,EAAEI,cAJlB;AAKE,IAAA,gBAAgB,EAAEK;AALpB;AAAA;AAAA;AAAA;AAAA,UADF;AASD;KArFenC,O;AAuFhB,eAAeA,OAAf","sourcesContent":["import { ProGallery } from 'pro-gallery';\r\nimport 'pro-gallery/dist/statics/main.css';\r\n\r\nexport function Gallery() {\r\n\r\n  // Add your images here...\r\n  const items = [\r\n          { // Image item:\r\n                  itemId: 'sample-id',\r\n                  mediaUrl: 'https://i.picsum.photos/id/674/200/300.jpg?hmac=kS3VQkm7AuZdYJGUABZGmnNj_3KtZ6Twgb5Qb9ITssY',\r\n                  metaData: {\r\n                          type: 'image',\r\n                          height: 200,\r\n                          width: 100,\r\n                          title: 'sample-title',\r\n                          description: 'sample-description',\r\n                          focalPoint: [0, 0],\r\n                          link: {\r\n                                  url: 'http://example.com',\r\n                                  target: '_blank'\r\n                          },\r\n                  }\r\n          },\r\n          { // Another Image item:\r\n                  itemId: 'differentItem',\r\n                  mediaUrl: 'https://i.picsum.photos/id/1003/1181/1772.jpg?hmac=oN9fHMXiqe9Zq2RM6XT-RVZkojgPnECWwyEF1RvvTZk',\r\n                  metaData: {\r\n                          type: 'image',\r\n                          height: 200,\r\n                          width: 100,\r\n                          title: 'sample-title',\r\n                          description: 'sample-description',\r\n                          focalPoint: [0, 0],\r\n                          link: {\r\n                                  url: 'http://example.com',\r\n                                  target: '_blank'\r\n                          },\r\n                  }\r\n          },\r\n          { // HTML item:\r\n                  itemId: 'htmlItem',\r\n                  html: \"<div style='width: 300px; height: 200px; background:pink;'>I am a text block</div>\",\r\n                  metadata: {\r\n                          type: \"text\",\r\n                          height: 200,\r\n                          width: 300,\r\n                          title: 'sample-title',\r\n                          description: 'sample-description',\r\n                          backgroundColor: 'pink'\r\n                  },\r\n\r\n          },\r\n  ]\r\n\r\n\r\n  // The options of the gallery (from the playground current state)\r\n  const options = {\r\n    galleryLayout: 1,\r\n    galleryMargin: 10,\r\n    scrollAnimation: 'ZOOM_OUT',\r\n    overlayAnimation: 'SLIDE_RIGHT',\r\n    imageHoverAnimation: 'ZOOM_IN',\r\n    imagePlacementAnimation: 'SLIDE',\r\n    itemEnableShadow: true,\r\n    overlayBackground: 'black',\r\n  };\r\n\r\n  // The size of the gallery container. The images will fit themselves in it\r\n  const container = {\r\n    width: window.innerWidth,\r\n    height: window.innerHeight\r\n  };\r\n\r\n  // The eventsListener will notify you anytime something has happened in the gallery.\r\n  const eventsListener = (eventName, eventData) => console.log({eventName, eventData}); \r\n\r\n  // The scrollingElement is usually the window, if you are scrolling inside another element, suplly it here\r\n  const scrollingElement = window;\r\n\r\n  return (\r\n    <ProGallery\r\n      items={items}\r\n      options={options}\r\n      container={container}\r\n      eventsListener={eventsListener}\r\n      scrollingElement={scrollingElement}\r\n    />\r\n  );\r\n}\r\n\r\nexport default Gallery;"]},"metadata":{},"sourceType":"module"}