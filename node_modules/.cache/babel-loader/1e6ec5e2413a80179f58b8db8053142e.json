{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\abdel\\\\Documents\\\\Safe\\\\Code\\\\Bootcamp\\\\frontend-May-Updated\\\\src\\\\components\\\\misc\\\\ProductPages\\\\AddProduct.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport loginImg from '../Assets/login.png';\nimport '../Assets/style.scss';\nimport '../Assets/bg.css'; // RegEx (Regular Expressions)\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst validateEmail = email => {\n  var re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(email);\n};\n\nconst validatePassword = password => {\n  const re = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{8,16}$/;\n  return re.test(password);\n};\n\nfunction AddProduct() {\n  _s();\n\n  // \"initial\", \"sending\", \"successful\", \"unsuccessful\", \"validation error\"\n  const [state, setState] = useState(\"initial\");\n  const [errorsState, setErrorsState] = useState([]); // Declare undefined variables for later assignment (ref props)\n\n  let titleField;\n  let descriptionField;\n  let priceField;\n  let colorField;\n  let productImageField;\n  let associatedUsernameField; // To instantiate a FormData object\n\n  const formData = new FormData();\n\n  const attachFile = evt => {\n    // Create an array for the files attached\n    const files = Array.from(evt.target.files); // Append each file to the formData\n\n    files.forEach((file, index) => {\n      formData.append(index, file);\n    });\n  };\n\n  const register = () => {\n    const errors = []; // 1. Validate the fields\n\n    if (titleField.value.length == 0) {\n      errors.push(\"Please enter a title!\");\n    }\n\n    if (descriptionField.value.length == 0) {\n      errors.push(\"Please enter a description!\");\n    }\n\n    if (priceField.value.length == 0) {\n      errors.push(\"Please enter a price!\");\n    }\n\n    if (colorField.value.length == 0) {\n      errors.push(\"Please specify the main color of the piece!\");\n    }\n\n    if (productImageField.value.length == 0) {\n      errors.push(\"You cannot upload an emtpy product!\");\n    }\n\n    if (associatedUsernameField.value.length == 0) {\n      errors.push(\"Please enter an identifiable author name!\");\n    } // 1.1 If there are errors, set the state to \"validation error\"\n\n\n    if (errors.length > 0) {\n      setState(\"validation error\"); // Populate the alert box with the errors\n\n      setErrorsState(errors);\n    } // 1.2 If there are no errors, set the state to \"sending\"\n    else {\n        setState(\"sending\");\n        setErrorsState([]);\n        formData.append('title', titleField.value);\n        formData.append('description', descriptionField.value);\n        formData.append('price', priceField.value);\n        formData.append('color', colorField.value);\n        formData.append('productImage', productImageField.value);\n        formData.append('associatedUsername', associatedUsernameField.value);\n        fetch(`${process.env.REACT_APP_API_ENDPOINT}/product/add`, {\n          method: 'POST',\n          //headers: {\"Content-Type\": \"application/json\"},\n          body: formData\n        }) // 2.1 If the submission is successful, set the state \"successful\"\n        .then(backendResponse => backendResponse.json()).then(theJson => {\n          console.log(theJson);\n          setState(\"successful\");\n        }) // 2.2 If the submission is unsuccessful, set the state \"unsuccessful\"\n        .catch(error => {\n          console.log(error);\n          setState(\"unsuccessful\");\n        });\n      }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"base-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: loginImg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            ref: elem => titleField = elem,\n            type: \"text\",\n            name: \"title\",\n            placeholder: \"What is my name?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"Description\",\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            ref: elem => descriptionField = elem,\n            type: \"text\",\n            name: \"description\",\n            placeholder: \"Am I just a name :(\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            ref: elem => priceField = elem,\n            type: \"text\",\n            name: \"price\",\n            placeholder: \"What's my worth...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Color\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            ref: elem => colorField = elem,\n            type: \"text\",\n            name: \"color\",\n            placeholder: \"I mean..\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Author Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            ref: elem => associatedUsernameField = elem,\n            type: \"text\",\n            name: \"associatedUsername\",\n            placeholder: \"Who is my father/mother/creator?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Upload Product\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: attachFile,\n            ref: elem => productImageField = elem,\n            type: \"file\",\n            accept: \".png, .jpg, .jpeg, .svg\",\n            name: \"productImage\",\n            placeholder: \"What do I look like?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"footer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/register\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            class: \"signButton\",\n            children: \"LET'S A GO!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 46\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }, this), state !== \"sending\" && state !== \"successful\" && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: register,\n      className: \"btn btn-primary mb-3\",\n      type: \"button\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 17\n    }, this), state === \"validation error\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: errorsState.map(error => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 36\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 20\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 17\n    }, this), state === \"successful\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-success\",\n      role: \"alert\",\n      children: \"Product added successfully!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 17\n    }, this), state === \"unsuccessful\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      children: \"Internal error. Please try again later.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 17\n    }, this), state === \"sending\" && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AddProduct, \"LWsNzOpChvRAr1hKF6jzQcohurU=\");\n\n_c = AddProduct;\n;\nexport default AddProduct;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddProduct\");","map":{"version":3,"sources":["D:/Users/abdel/Documents/Safe/Code/Bootcamp/frontend-May-Updated/src/components/misc/ProductPages/AddProduct.js"],"names":["React","useState","loginImg","validateEmail","email","re","test","validatePassword","password","AddProduct","state","setState","errorsState","setErrorsState","titleField","descriptionField","priceField","colorField","productImageField","associatedUsernameField","formData","FormData","attachFile","evt","files","Array","from","target","forEach","file","index","append","register","errors","value","length","push","fetch","process","env","REACT_APP_API_ENDPOINT","method","body","then","backendResponse","json","theJson","console","log","catch","error","elem","map"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport loginImg from '../Assets/login.png'\r\nimport '../Assets/style.scss'\r\nimport '../Assets/bg.css'\r\n\r\n// RegEx (Regular Expressions)\r\nconst validateEmail = (email) => {\r\n    var re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(email);\r\n}\r\n\r\nconst validatePassword = (password) => {\r\n    const re = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{8,16}$/;\r\n    return re.test(password);\r\n}\r\n\r\nfunction AddProduct() {\r\n\r\n    // \"initial\", \"sending\", \"successful\", \"unsuccessful\", \"validation error\"\r\n    const [state, setState] = useState(\"initial\"); \r\n    const [errorsState, setErrorsState] = useState([]);\r\n\r\n    // Declare undefined variables for later assignment (ref props)\r\n    let titleField;\r\n    let descriptionField;\r\n    let priceField;\r\n    let colorField;\r\n    let productImageField;\r\n    let associatedUsernameField;\r\n\r\n    // To instantiate a FormData object\r\n    const formData = new FormData();\r\n\r\n    const attachFile = (evt) => {\r\n\r\n        // Create an array for the files attached\r\n        const files = Array.from(evt.target.files);\r\n\r\n        // Append each file to the formData\r\n        files.forEach(\r\n            (file, index) => {\r\n                formData.append(index, file);\r\n            }\r\n        )\r\n    }\r\n\r\n    const register = () => {\r\n\r\n        const errors = [];\r\n\r\n        // 1. Validate the fields\r\n        if(titleField.value.length == 0) {\r\n            errors.push(\"Please enter a title!\");\r\n        }\r\n        if(descriptionField.value.length == 0) {\r\n            errors.push(\"Please enter a description!\");\r\n        }\r\n        if(priceField.value.length == 0) {\r\n            errors.push(\"Please enter a price!\");\r\n        }\r\n        if(colorField.value.length == 0) {\r\n            errors.push(\"Please specify the main color of the piece!\");\r\n        }\r\n        if(productImageField.value.length == 0) {\r\n            errors.push(\"You cannot upload an emtpy product!\");\r\n        }\r\n        if(associatedUsernameField.value.length == 0) {\r\n            errors.push(\"Please enter an identifiable author name!\");\r\n        }\r\n        \r\n\r\n        // 1.1 If there are errors, set the state to \"validation error\"\r\n        if(errors.length > 0) {\r\n            setState(\"validation error\");\r\n            // Populate the alert box with the errors\r\n            setErrorsState(errors);\r\n        }\r\n        // 1.2 If there are no errors, set the state to \"sending\"\r\n        else {\r\n            setState(\"sending\");\r\n            setErrorsState([]);\r\n\r\n            formData.append('title', titleField.value);\r\n            formData.append('description', descriptionField.value);\r\n            formData.append('price', priceField.value);\r\n            formData.append('color', colorField.value);\r\n            formData.append('productImage', productImageField.value);\r\n            formData.append('associatedUsername', associatedUsernameField.value);\r\n\r\n            fetch(`${process.env.REACT_APP_API_ENDPOINT}/product/add`, {\r\n                method: 'POST',\r\n                //headers: {\"Content-Type\": \"application/json\"},\r\n                body: formData\r\n            })\r\n            // 2.1 If the submission is successful, set the state \"successful\"\r\n            .then((backendResponse)=> backendResponse.json())\r\n            .then((theJson)=>{\r\n                console.log(theJson);\r\n                setState(\"successful\");\r\n            })\r\n            // 2.2 If the submission is unsuccessful, set the state \"unsuccessful\"\r\n            .catch((error)=>{\r\n                console.log(error);\r\n                setState(\"unsuccessful\");\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"base-container\">\r\n\r\n        <div className=\"content\">\r\n          <div className=\"image\">\r\n            <img src={loginImg} />\r\n          </div>\r\n          <div className=\"form\">\r\n            <div className=\"form-group\">\r\n              <label>Title</label>\r\n              <input  \r\n              ref={ (elem)=>titleField = elem } type=\"text\" name=\"title\" placeholder=\"What is my name?\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"Description\">Description</label>\r\n              <input  \r\n              ref={ (elem)=>descriptionField = elem } type=\"text\" name=\"description\" placeholder=\"Am I just a name :(\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Price</label>\r\n              <input  \r\n              ref={ (elem)=>priceField = elem } type=\"text\" name=\"price\" placeholder=\"What's my worth...\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Color</label>\r\n              <input  \r\n              ref={ (elem)=>colorField = elem } type=\"text\" name=\"color\" placeholder=\"I mean..\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Author Username</label>\r\n              <input  \r\n              ref={ (elem)=>associatedUsernameField = elem } type=\"text\" name=\"associatedUsername\" placeholder=\"Who is my father/mother/creator?\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Upload Product</label>\r\n              <input  \r\n              onChange={attachFile}\r\n              ref={ (elem)=>productImageField = elem } type=\"file\" accept=\".png, .jpg, .jpeg, .svg\" name=\"productImage\" placeholder=\"What do I look like?\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"footer\">\r\n        <div className=\"button\">\r\n                        <Link to='/register'><button class=\"signButton\">LET'S A GO!</button></Link>\r\n                    </div>\r\n        </div>\r\n\r\n            {\r\n                state !== \"sending\" && state !== \"successful\" &&\r\n                <button \r\n                onClick={register}\r\n                className=\"btn btn-primary mb-3\" type=\"button\">Submit</button>\r\n            }\r\n\r\n            { \r\n                state === \"validation error\" &&\r\n                <div className=\"alert alert-danger\" role=\"alert\">\r\n                   <ul>\r\n                   {\r\n                       errorsState.map(\r\n                        (error) => <li>{error}</li>\r\n                       )\r\n                   }\r\n                   </ul>\r\n                </div>\r\n            }\r\n\r\n            {\r\n                state === \"successful\" &&\r\n                <div className=\"alert alert-success\" role=\"alert\">\r\n                    Product added successfully!\r\n                </div>\r\n            }\r\n\r\n            {\r\n                state === \"unsuccessful\" &&\r\n                <div className=\"alert alert-danger\" role=\"alert\">\r\n                    Internal error. Please try again later.\r\n                </div>\r\n            }\r\n\r\n            {\r\n                state === \"sending\" &&\r\n                <p>Loading...</p>\r\n            }\r\n\r\n\r\n        </div>\r\n    )\r\n\r\n};\r\n\r\nexport default AddProduct;"]},"metadata":{},"sourceType":"module"}